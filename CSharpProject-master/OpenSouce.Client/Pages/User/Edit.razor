@page "/users/edit/{userId:int}"
@inject HttpClient HttpClient

@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
<h1>Edit User</h1>

@if (user == null)
{
    <p>Loading user...</p>
}
else
{
    <form @onsubmit="HandleSubmit">
        <div class="form-group">
            <label for="username">Username</label>
            <input type="text" class="form-control" id="username" @bind="user.Username" required>
        </div>
        <div class="form-group">
            <label for="password">Password (leave blank to keep current password)</label>
            <input type="password" class="form-control" id="password" @bind="user.Password">
        </div>
        <button type="submit" class="btn btn-primary">Save Changes</button>
    </form>
}

@code {
    [Parameter]
    public int UserId { get; set; }

    private User user;

    protected override async Task OnInitializedAsync()
    {
        user = await HttpClient.GetFromJsonAsync<User>($"api/user/{UserId}");
    }

    private async Task HandleSubmit()
    {
        try
        {
            var response = await HttpClient.PutAsJsonAsync($"api/user/{user.UserId}", user);
            response.EnsureSuccessStatusCode();

            NavigationManager.NavigateTo("/users");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating user: {ex.Message}");
        }
    }
}